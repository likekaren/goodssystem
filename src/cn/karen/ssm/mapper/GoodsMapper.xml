<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.karen.ssm.mapper.GoodsMapper" >
  <resultMap id="BaseResultMap" type="cn.karen.ssm.po.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="goodsname" property="goodsname" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="depotid" property="depotid" jdbcType="INTEGER" />
    <result column="areaid" property="areaid" jdbcType="INTEGER" />
    <result column="zoneid" property="zoneid" jdbcType="VARCHAR" />
    <result column="goodsnum" property="goodsnum" jdbcType="INTEGER" />
    <result column="goodsid" property="goodsid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, goodsname, userid, depotid, areaid, zoneid, goodsnum, goodsid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.karen.ssm.po.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.karen.ssm.po.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.karen.ssm.po.Goods" >
    insert into goods (id, goodsname, userid, 
      depotid, areaid, zoneid, 
      goodsnum, goodsid)
    values (#{id,jdbcType=INTEGER}, #{goodsname,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{depotid,jdbcType=INTEGER}, #{areaid,jdbcType=INTEGER}, #{zoneid,jdbcType=VARCHAR}, 
      #{goodsnum,jdbcType=INTEGER}, #{goodsid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.karen.ssm.po.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsname != null" >
        goodsname,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="depotid != null" >
        depotid,
      </if>
      <if test="areaid != null" >
        areaid,
      </if>
      <if test="zoneid != null" >
        zoneid,
      </if>
      <if test="goodsnum != null" >
        goodsnum,
      </if>
      <if test="goodsid != null" >
        goodsid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null" >
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="depotid != null" >
        #{depotid,jdbcType=INTEGER},
      </if>
      <if test="areaid != null" >
        #{areaid,jdbcType=INTEGER},
      </if>
      <if test="zoneid != null" >
        #{zoneid,jdbcType=VARCHAR},
      </if>
      <if test="goodsnum != null" >
        #{goodsnum,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null" >
        #{goodsid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.karen.ssm.po.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsname != null" >
        goodsname = #{record.goodsname,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.depotid != null" >
        depotid = #{record.depotid,jdbcType=INTEGER},
      </if>
      <if test="record.areaid != null" >
        areaid = #{record.areaid,jdbcType=INTEGER},
      </if>
      <if test="record.zoneid != null" >
        zoneid = #{record.zoneid,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsnum != null" >
        goodsnum = #{record.goodsnum,jdbcType=INTEGER},
      </if>
      <if test="record.goodsid != null" >
        goodsid = #{record.goodsid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set id = #{record.id,jdbcType=INTEGER},
      goodsname = #{record.goodsname,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      depotid = #{record.depotid,jdbcType=INTEGER},
      areaid = #{record.areaid,jdbcType=INTEGER},
      zoneid = #{record.zoneid,jdbcType=VARCHAR},
      goodsnum = #{record.goodsnum,jdbcType=INTEGER},
      goodsid = #{record.goodsid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.karen.ssm.po.Goods" >
    update goods
    <set >
      <if test="goodsname != null" >
        goodsname = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="depotid != null" >
        depotid = #{depotid,jdbcType=INTEGER},
      </if>
      <if test="areaid != null" >
        areaid = #{areaid,jdbcType=INTEGER},
      </if>
      <if test="zoneid != null" >
        zoneid = #{zoneid,jdbcType=VARCHAR},
      </if>
      <if test="goodsnum != null" >
        goodsnum = #{goodsnum,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null" >
        goodsid = #{goodsid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.karen.ssm.po.Goods" >
    update goods
    set goodsname = #{goodsname,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      depotid = #{depotid,jdbcType=INTEGER},
      areaid = #{areaid,jdbcType=INTEGER},
      zoneid = #{zoneid,jdbcType=VARCHAR},
      goodsnum = #{goodsnum,jdbcType=INTEGER},
      goodsid = #{goodsid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>